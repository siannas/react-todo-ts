{"mappings":"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","sources":["src/Page/Dashboard.tsx","src/Component/carditem.tsx","src/util/local-date.d.ts","node_modules/@parcel/runtime-js/lib/runtime-902c984fdf45331e.js","src/Component/alert.tsx"],"sourcesContent":["import React, { useEffect } from \"react\"\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { remove, cloneDeep } from \"lodash\"\r\nimport Button from \"../Component/Button\"\r\nimport CardItem from \"../Component/carditem\"\r\nimport Layout from \"../Layout\"\r\nimport emptyImage from \"../images/activity-empty-state.png\"\r\n\r\nimport Alert from \"../Component/alert\"\r\nimport ModalDelete from \"../Component/modal-delete\"\r\nimport UseModal from \"../util/UseModal\"\r\n\r\ninterface DataActivity {\r\n    total: number,\r\n    limit?: number,\r\n    skip?: number,\r\n    data: {title:string, id:number, created_at:string}[]\r\n}\r\n\r\nexport default function Dashboard() {\r\n\r\n    const navigate = useNavigate()\r\n\r\n    const [isShowAlert, setShowAlert] = UseModal()\r\n\r\n    const [isShowDeleteModal, setShowDeleteModal] = UseModal()\r\n\r\n    const [data, setData] = React.useState<DataActivity>({total:0, data:[]});\r\n\r\n    const [idDelete, setIdDelete] = React.useState<number>(-1)\r\n\r\n    const [titleDelete, setTitleDelete] = React.useState<string>('')\r\n\r\n    async function getData() \r\n    {\r\n        const response = await fetch('https://todo.api.devcode.gethired.id/activity-groups?email=siannas@gmail.com')\r\n\r\n        let actualData = await response.json();\r\n\r\n        setData(actualData)\r\n    }\r\n\r\n    useEffect(() => {\r\n\r\n        getData()\r\n    },[])\r\n\r\n    const AddActivity = async()=>{\r\n        const requestOptions = {\r\n            method: 'POST',\r\n            headers: { 'Content-Type': 'application/json' },\r\n            body: JSON.stringify({\r\n                \"title\": \"New Activity\",\r\n                \"email\": \"siannas@gmail.com\"\r\n            })\r\n        };\r\n        const response = await fetch('https://todo.api.devcode.gethired.id/activity-groups/', requestOptions);\r\n\r\n        const actualData = await response.json();\r\n\r\n        if (!response.ok) {\r\n            // get error message from body or default to response status\r\n            const error = response.status;\r\n            return Promise.reject(error);\r\n        }\r\n\r\n        // const newData = [{\r\n        //     \"id\": actualData.id,\r\n        //     \"title\": actualData.title,\r\n        //     \"created_at\": actualData.created_at\r\n        // }].concat(data.data) \r\n\r\n        // setData({\r\n        //     total:data.total+1,\r\n        //     limit: data.limit,\r\n        //     skip: data.skip,\r\n        //     data: newData\r\n        // }) \r\n        getData();\r\n    }\r\n\r\n    const OnBeforeDelete = (id:number, title:string) => {\r\n        setIdDelete(id)\r\n        setTitleDelete(title)\r\n        setShowDeleteModal(true)\r\n    }\r\n\r\n    const OnDeleteConfirm = () => {\r\n        setIdDelete(-1)\r\n        setShowDeleteModal(false)\r\n\r\n        const requestOptions = {\r\n            method: 'DELETE',\r\n        };\r\n        fetch('https://todo.api.devcode.gethired.id/activity-groups/'+idDelete, requestOptions)\r\n            .then(()=>{\r\n                setShowAlert(true)\r\n\r\n                /// Delete it\r\n                var newData = cloneDeep(data.data)\r\n\r\n                newData = remove(newData, (x) => x.id !== idDelete)\r\n\r\n                setData({\r\n                    total:data.total-1,\r\n                    limit: data.limit,\r\n                    skip: data.skip,\r\n                    data: newData\r\n                }) \r\n            })\r\n    }\r\n\r\nreturn(\r\n    <>\r\n    <Alert isShow={isShowAlert} setShow={setShowAlert} text=\"Activity berhasil dihapus\"/>\r\n    <ModalDelete OnDeleteConfirm={OnDeleteConfirm} isShow={isShowDeleteModal} setShow={setShowDeleteModal}  text=\"Apakah anda yakin menghapus activity\" itemname={titleDelete} />\r\n    <Layout>\r\n        <div className=\"todo-header\">\r\n            <h1 className=\"todo-title\"  data-cy=\"activity-title\">Activity</h1>\r\n            <Button className=\"ml-auto btn-primary\" text='Tambah' dataCy='activity-add-button' icon=\"icon-plus\"\r\n                onClick={AddActivity}/>\r\n        </div>\r\n        <div className=\"dashboard-content\">\r\n            {\r\n                data.total === 0 ? \r\n                <div className=\"activity-empty-state\" data-cy=\"activity-empty-state\">\r\n                    <img src={emptyImage} alt=\"empty\" />    \r\n                </div>\r\n                :\r\n                data.data?.map((x) =><CardItem \r\n                    key={x.id} \r\n                    uid={x.id}\r\n                    title={x?.title} \r\n                    date={x.created_at} \r\n                    OnBeforeDelete={OnBeforeDelete}\r\n                    onClick={()=>navigate('/detail/'+x.id)}\r\n                    /> )\r\n            }\r\n        </div>\r\n    </Layout>\r\n    </>\r\n)\r\n}","import React from 'react'\r\nimport './carditem.css'\r\nimport { LocalDate} from \"../util/local-date.d\"\r\n\r\nexport default function CardItem({uid, title, date, OnBeforeDelete, onClick}:{uid:number, title:string, date:string, OnBeforeDelete?:any, onClick?:any}) {\r\n\r\n    const mydate:string = LocalDate(new Date(date))\r\n\r\nreturn (\r\n    <div className='activity-item' data-cy='activity-item' >\r\n        <h2 className='activity-item-title' data-cy='activity-item-title' onClick={onClick}>\r\n        {title}\r\n        </h2>\r\n        <div className='activity-item-footer'>\r\n            <p className='activity-item-dates' data-cy='activity-item-date'>\r\n            {mydate}\r\n            </p>\r\n            <button className='btn btn-light btn-simple' data-cy='activity-item-delete-button' \r\n                onClick={()=>OnBeforeDelete(uid,title)}>\r\n                <span className='icon-delete'></span>\r\n            </button>\r\n        </div>\r\n    </div>\r\n)\r\n}","export function LocalDate(date:Date):string {\r\n    var str:string = \"\"\r\n    str += date.getDate()\r\n    \r\n    switch(date.getMonth())\r\n    {\r\n        case 0:\r\n            str+=' Januari'\r\n            break;\r\n        case 1:\r\n            str+=' Februari'\r\n            break;\r\n        case 2:\r\n            str+=' Maret'\r\n            break;\r\n        case 3:\r\n            str+=' April'\r\n            break;\r\n        case 4:\r\n            str+=' Mei'\r\n            break;\r\n        case 5:\r\n            str+=' Juni'\r\n            break;\r\n        case 6:\r\n            str+=' Juli'\r\n            break;\r\n        case 7:\r\n            str+=' Agustus'\r\n            break;\r\n        case 8:\r\n            str+=' September'\r\n            break;\r\n        case 9:\r\n            str+=' Oktober'\r\n            break;\r\n        case 10:\r\n            str+=' November'\r\n            break;\r\n        case 11:\r\n            str+=' Desember'\r\n            break;\r\n    }\r\n\r\n    str += \" \"\r\n    str += date.getFullYear()\r\n\r\n    return str\r\n}","module.exports = new __parcel__URL__(require('./helpers/bundle-manifest').resolve(\"2gnJN\")).toString();","import React from \"react\"\r\n\r\nexport default function Alert({className, text, isShow, setShow}:{className?:string, text?:string, isShow:boolean, setShow?:any }) {\r\nreturn (\r\n    <div className={\"modal-container \"+(isShow ? 'active' : '')} onClick={()=>setShow(false)} \r\n        data-cy=\"modal-information\">\r\n        <div className={'alert'}>\r\n            <span className=\"icon-alert-sm\" data-cy=\"modal-information-icon\"></span>\r\n            <h3 data-cy=\"modal-information-title\">{text}</h3>\r\n        </div>    \r\n    </div>\r\n)\r\n}"],"names":["$ayMG0","parcelRequire","$1f821f513053e23e$export$2e2bcd8739ae039","navigate","$lzNIT","useNavigate","isShowAlert","setShowAlert","$8PsrX","default","isShowDeleteModal","setShowDeleteModal","data","setData","$parcel$interopDefault","$acw62","useState","total","idDelete","setIdDelete","titleDelete","setTitleDelete","async","getData","response","fetch","actualData","json","useEffect","OnBeforeDelete","id","title","jsxs","Fragment","jsx","$lhSjn","isShow","setShow","text","$b2je2","OnDeleteConfirm","method","then","newData","$f1q41","cloneDeep","remove","x","limit","skip","itemname","$d1VrR","className","$k5Zdv","dataCy","icon","onClick","requestOptions","headers","body","JSON","stringify","email","ok","error","status","Promise","reject","src","$9tlV6","alt","map","$hozK7","uid","date","created_at","$7b574bca7a944922$export$2e2bcd8739ae039","mydate","$iBHen","LocalDate","Date","$81e5349684267a42$export$6397c6cbb8fe96b6","str","getDate","getMonth","getFullYear","module","exports","URL","resolve","import","meta","url","toString","$b9e91d9c5dd69e2e$export$2e2bcd8739ae039"],"version":3,"file":"Dashboard.9532f91d.js.map"}